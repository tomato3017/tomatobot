// Code generated by mockery v2.43.2. DO NOT EDIT.

package owm

import mock "github.com/stretchr/testify/mock"

// MockOpenWeatherMapIClient is an autogenerated mock type for the OpenWeatherMapIClient type
type MockOpenWeatherMapIClient struct {
	mock.Mock
}

type MockOpenWeatherMapIClient_Expecter struct {
	mock *mock.Mock
}

func (_m *MockOpenWeatherMapIClient) EXPECT() *MockOpenWeatherMapIClient_Expecter {
	return &MockOpenWeatherMapIClient_Expecter{mock: &_m.Mock}
}

// CurrentWeatherByLocation provides a mock function with given fields: location
func (_m *MockOpenWeatherMapIClient) CurrentWeatherByLocation(location Location) (OneCallCurrentResponse, error) {
	ret := _m.Called(location)

	if len(ret) == 0 {
		panic("no return value specified for CurrentWeatherByLocation")
	}

	var r0 OneCallCurrentResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(Location) (OneCallCurrentResponse, error)); ok {
		return rf(location)
	}
	if rf, ok := ret.Get(0).(func(Location) OneCallCurrentResponse); ok {
		r0 = rf(location)
	} else {
		r0 = ret.Get(0).(OneCallCurrentResponse)
	}

	if rf, ok := ret.Get(1).(func(Location) error); ok {
		r1 = rf(location)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CurrentWeatherByLocation'
type MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call struct {
	*mock.Call
}

// CurrentWeatherByLocation is a helper method to define mock.On call
//   - location Location
func (_e *MockOpenWeatherMapIClient_Expecter) CurrentWeatherByLocation(location interface{}) *MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call {
	return &MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call{Call: _e.mock.On("CurrentWeatherByLocation", location)}
}

func (_c *MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call) Run(run func(location Location)) *MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(Location))
	})
	return _c
}

func (_c *MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call) Return(_a0 OneCallCurrentResponse, _a1 error) *MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call) RunAndReturn(run func(Location) (OneCallCurrentResponse, error)) *MockOpenWeatherMapIClient_CurrentWeatherByLocation_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockOpenWeatherMapIClient creates a new instance of MockOpenWeatherMapIClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockOpenWeatherMapIClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockOpenWeatherMapIClient {
	mock := &MockOpenWeatherMapIClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
