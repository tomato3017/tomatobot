// Code generated by mockery v2.43.2. DO NOT EDIT.

package notifications

import mock "github.com/stretchr/testify/mock"

// MockPublisherOptions is an autogenerated mock type for the PublisherOptions type
type MockPublisherOptions struct {
	mock.Mock
}

type MockPublisherOptions_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPublisherOptions) EXPECT() *MockPublisherOptions_Expecter {
	return &MockPublisherOptions_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: p
func (_m *MockPublisherOptions) Execute(p *NotificationPublisher) {
	_m.Called(p)
}

// MockPublisherOptions_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockPublisherOptions_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - p *NotificationPublisher
func (_e *MockPublisherOptions_Expecter) Execute(p interface{}) *MockPublisherOptions_Execute_Call {
	return &MockPublisherOptions_Execute_Call{Call: _e.mock.On("Execute", p)}
}

func (_c *MockPublisherOptions_Execute_Call) Run(run func(p *NotificationPublisher)) *MockPublisherOptions_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*NotificationPublisher))
	})
	return _c
}

func (_c *MockPublisherOptions_Execute_Call) Return() *MockPublisherOptions_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockPublisherOptions_Execute_Call) RunAndReturn(run func(*NotificationPublisher)) *MockPublisherOptions_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPublisherOptions creates a new instance of MockPublisherOptions. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPublisherOptions(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPublisherOptions {
	mock := &MockPublisherOptions{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
