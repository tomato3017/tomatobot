// Code generated by mockery v2.43.2. DO NOT EDIT.

package proxy

import mock "github.com/stretchr/testify/mock"

// MockProxyOption is an autogenerated mock type for the ProxyOption type
type MockProxyOption struct {
	mock.Mock
}

type MockProxyOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockProxyOption) EXPECT() *MockProxyOption_Expecter {
	return &MockProxyOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: _a0
func (_m *MockProxyOption) Execute(_a0 *TGBotProxy) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*TGBotProxy) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockProxyOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockProxyOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - _a0 *TGBotProxy
func (_e *MockProxyOption_Expecter) Execute(_a0 interface{}) *MockProxyOption_Execute_Call {
	return &MockProxyOption_Execute_Call{Call: _e.mock.On("Execute", _a0)}
}

func (_c *MockProxyOption_Execute_Call) Run(run func(_a0 *TGBotProxy)) *MockProxyOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*TGBotProxy))
	})
	return _c
}

func (_c *MockProxyOption_Execute_Call) Return(_a0 error) *MockProxyOption_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockProxyOption_Execute_Call) RunAndReturn(run func(*TGBotProxy) error) *MockProxyOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockProxyOption creates a new instance of MockProxyOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockProxyOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockProxyOption {
	mock := &MockProxyOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
